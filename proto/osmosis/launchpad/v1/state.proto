// Since: cosmos-sdk 0.43
syntax = "proto3";
package osmosis.launchpad.v1;

import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/osmosis-labs/osmosis/x/launchpad/api";
option (gogoproto.goproto_getters_all) = false;
// option (gogoproto.goproto_stringer_all) = false;

message LBP {
  // Destination for the earned token_in
  string treasury = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  uint64 id = 2;

  // token_out a token denom to be bootstraped. May be referred as base
  // currency.
  string token_out = 3;
  // token_in a denom used to buy LB tokens (`token_out`). May be referred as
  // quote_currency.
  string token_in = 4;

  // start time when the token emission starts.
  google.protobuf.Timestamp start_time = 5
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  // end time when the token emission ends. Can't be bigger than start +
  // 139years (to avoid round overflow)
  google.protobuf.Timestamp end_time = 6
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];

  // Round number when the pool was last time updated.
  int64 round = 7;

  // Last round of the LBP;
  int64 end_round = 8;

  string out_remaining = 10 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string out_sold = 11 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // out token per share
  string out_per_share = 12 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total amount of currently staked coins (token_in) but not spent coins.
  string staked = 13 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // total amount of earned coins (token_in)
  string income = 14 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total amount of shares
  string shares = 15 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // string name = 20 [ (gogoproto.nullable) = false ];
  // string url = 21 [ (gogoproto.nullable) = false ];
}

// UserPosition represents user account in a pool
message UserPosition {

  string shares = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // total number of currently staked tokens
  string staked = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // last token/share ratio
  string out_per_share = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // amount of token_in spent
  string spent = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // Amount of accumulated, not withdrawn, purchased tokens (token_out)
  string purchased = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
