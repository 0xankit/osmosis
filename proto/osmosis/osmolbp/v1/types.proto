// Since: cosmos-sdk 0.43
syntax = "proto3";
package osmosis.osmolbp.v1;

import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/osmosis-labs/osmosis/x/osmolbp/api";
option (gogoproto.goproto_getters_all) = false;
// option (gogoproto.goproto_stringer_all) = false;

message LBP {

  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  uint64 id = 2;

  // token_out a token denom to be bootstraped. May be referred as base
  // currency.
  string token_out = 3;
  // token_in a denom used to buy LB tokens (`token_out`). May be referred as
  // quote_currency.
  string token_in = 4;

  // start time when the token emission starts.
  google.protobuf.Timestamp start_time = 5
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  // end time when the token emission ends. Can't be bigger than start +
  // 139years (to avoid round overflow)
  google.protobuf.Timestamp end_time = 6
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];

  // number of `tokens_out` to be sold per second. 1 second = 1 round.
  string rate = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // Round number when the pool was last time updated.
  uint64 Round = 8;

  // Last round of the LBP;
  uint64 EndRound = 9;

  // Running sum of sold coins per unit of staked coins (token_out)
  string accumulator_out = 10 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // Rate of receiving coins (token_in) per round
  string income_rate = 11 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total number of currently staked coins (token_in)
  string staked = 12 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total amount of earned coins (token_in)
  string income = 13 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // accounting attributes

  string out_remaining = 20 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string out_distributed = 21 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string out_per_share = 22 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string in_remaining = 25 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string in_paid_unclaimed = 26 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string in_paid = 27 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total amount of shares
  string shares = 30 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // string name = 20 [ (gogoproto.nullable) = false ];
  // string url = 21 [ (gogoproto.nullable) = false ];
}

// UserPosition represents user account in a pool
message UserPosition {
  // lbp.accumulator value when the last ping was called and rewards calculated
  string accumulator = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total number of currently staked tokens
  string staked = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // Amount of accumulated, not withdrawn purchased tokens (token_out)
  string purchased = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // total amount of spent coins (token_in)
  string spent = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
