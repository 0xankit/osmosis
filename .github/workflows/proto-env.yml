name: ghcr.io/osmosis-labs/proto-builder
# Build & Push rebuilds the cosmos sdk development environment image every time the master branch is updated,
# and pushes the image to https://ghcr.io/cosmos/cosmos-sdk
# Other images in the cosmos-sdk consume ghcr.io/cosmos/cosmos-sdk

on:
  pull_request:
  schedule:
    # Run hourly, to speed downstream builds
    - cron:  '0 * * * *'
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]?-rc*" # Push events to matching v*, i.e. v1.0, v20.15.10 or Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/osmosis-labs/proto-builder
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=latest
            fi
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      -
        name: Build
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          file: contrib/proto-docker/Dockerfile
          context: contrib/proto-docker
          platforms: linux/amd64,linux/arm64
          push: false
          
      -
        name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}

        with:
          file: contrib/proto-docker/Dockerfile
          context: contrib/proto-docker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
