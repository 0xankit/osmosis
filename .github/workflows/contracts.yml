name: Cosmwasm Contracts
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "main"
      - "v[0-9]**"
  workflow_dispatch:


jobs:
  test:
    name: Test Cosmwasm Contracts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        contract: [
          {workdir: ./x/ibc-rate-limit/, output: bytecode/rate_limiter.wasm, build: artifacts/rate_limiter.wasm, name: rate_limiter},
          {workdir: ./x/ibc-hooks/, output: bytecode/crosschain_swaps.wasm, build: artifacts/crosschain_swaps.wasm, name: crosschain_swaps},
          {workdir: ./x/ibc-hooks/, output: bytecode/swaprouter.wasm, build: artifacts/swaprouter.wasm, name: swaprouter},
        ]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.0.1
        with:
          PATTERNS: |
            **/**.rs
            **/**.go
            go.mod
            **/**cargo.toml
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.65.0
        with:
          target: wasm32-unknown-unknown

      - name: Add the wasm target
        working-directory: ${{ matrix.contract.workdir }}
        run: >
          rustup target add wasm32-unknown-unknown;

      - name: Test
        working-directory: ${{ matrix.contract.workdir }}
        run: >
          cargo test

      - name: Optimize
        working-directory: ${{ matrix.contract.workdir }}
        run: >
          docker run --rm -v "$(pwd)":/code \
            --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
            cosmwasm/workspace-optimizer:0.12.10

      - name: 'Upload optimized contract artifact'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.contract.name }}
          path: ${{ matrix.contract.workdir }}${{ matrix.contract.build }}
          retention-days: 1

      - name: 'Upload Cargo.lock artifact'
        uses: actions/upload-artifact@v3
        with:
          name: Cargo.lock
          path: ${{ matrix.contract.workdir }}Cargo.lock
          retention-days: 1

      - name: Check Test Data
        working-directory: ${{ matrix.contract.workdir }}
        if: ${{ matrix.contract.output != null }}
        run: >
          diff ${{ matrix.contract.output }} ${{ matrix.contract.build }}
  

  lints:
    name: Cosmwasm Lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workdir: [./x/ibc-rate-limit]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.65.0
        with:
          components: rustfmt, clippy

      - name: Format
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo fmt --all -- --check

      - name: run cargo clippy
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo clippy -- -D warnings

