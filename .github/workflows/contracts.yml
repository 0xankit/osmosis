name: Cosmwasm Contracts
on:
  pull_request:
  push:


jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workdir: [./x/ibc-rate-limit]
        output: [./x/ibc-rate-limit/testdata/rate_limiter.wasm]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - name: Build
        working-directory: ${{ matrix.workdir }}
        run: >
          rustup target add wasm32-unknown-unknown;
          cargo build --release --target wasm32-unknown-unknown

      - name: Test
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo test

      - name: Set latest cw-optimizoor version
        run: >
          echo "CW_OPTIMIZOOR_VERSION=`cargo search cw-optimizoor -q | cut -d '"' -f 2`" >> $GITHUB_ENV

      - name: Cache node cw-optimizoor
        id: cache-cw-optimizoor
        uses: actions/cache@v3
        env:
          cache-name: cache-cw-optimizoor
        with:
          # cargo bin files are stored in `~/.cargo/bin/` on Linux/macOS
          path: ~/.cargo/bin/cargo-cw-optimizoor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.CW_OPTIMIZOOR_VERSION }}

      - if: ${{ steps.cache-cw-optimizoor.outputs.cache-hit != 'true' }}
        name: Install cw-optimizoor
        continue-on-error: true
        run: >
          cargo install cw-optimizoor

      - name: Optimize
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo cw-optimizoor

      - name: Check Test Data
        working-directory: ${{ matrix.workdir }}
        if: ${{ matrix.output != null }}
        run: >
          ls ${{ matrix.output }};
          ls ${{ matrix.output }}/artifacts;
          diff ${{ matrix.output }} ./artifacts/rate_limiter.wasm
  

  lints:
    name: Cosmwasm Lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workdir: [./x/ibc-rate-limit]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt clippy
          target: wasm32-unknown-unknown

      - name: Format
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo fmt --all -- --check

      - name: run cargo clippy
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo clippy -- -D warnings

